-- Создание таблицы user_crm
CREATE TABLE IF NOT EXISTS user_crm (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    email varchar(255) NOT NULL,
    password varchar(255) NOT NULL,
    role varchar(255) NOT NULL,
    username varchar(255) NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT role_check CHECK ((role = ANY (ARRAY['ROLE_USER', 'ROLE_ADMIN']))),
    CONSTRAINT username_unique UNIQUE (username),
    CONSTRAINT email_unique UNIQUE (email)
);

-- Создание таблицы chat_room
CREATE TABLE IF NOT EXISTS chat_room (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar(255),
    type_chat varchar(255),
    PRIMARY KEY (id),
    CONSTRAINT type_chat_check CHECK ((type_chat = ANY (ARRAY['USER_CHAT', 'TASK_CHAT', 'GROUP_CHAT'])))
);

-- Создание таблицы status
CREATE TABLE IF NOT EXISTS status (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar(255),
    PRIMARY KEY (id)
);

-- Создание таблицы task
CREATE TABLE IF NOT EXISTS task (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created_at timestamp NOT NULL,
    description varchar(255),
    title varchar(255),
    status_id bigint,
    profit double precision,
    owner_id bigint,
    PRIMARY KEY (id),
    FOREIGN KEY (status_id) REFERENCES status(id)
);

-- Создание таблицы message
CREATE TABLE IF NOT EXISTS message (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    date timestamp,
    message varchar(255),
    sender_name varchar(255),
    chat_room_id bigint,
    status varchar(255),
    PRIMARY KEY (id),
    FOREIGN KEY (chat_room_id) REFERENCES chat_room(id)
);

-- Создание таблицы event_publication
CREATE TABLE IF NOT EXISTS event_publication (
    id uuid NOT NULL,
    completion_date timestamptz,
    event_type varchar(255),
    listener_id varchar(255),
    publication_date timestamptz,
    serialized_event varchar(255),
    PRIMARY KEY (id)
);

-- Создание таблицы chat_room_users
CREATE TABLE IF NOT EXISTS chat_room_users (
    chat_rooms_id bigint NOT NULL,
    users_id bigint NOT NULL,
    FOREIGN KEY (users_id) REFERENCES user_crm(id),
    FOREIGN KEY (chat_rooms_id) REFERENCES chat_room(id)
);